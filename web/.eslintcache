[{"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/App.js":"1","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/index.js":"2","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/reportWebVitals.js":"3","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/OrganismsHeader.jsx":"4","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsLogo.jsx":"5","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/index.js":"6","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsProfilePicture.jsx":"7","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesLocalVideo.jsx":"8","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/OrganismsMain.jsx":"9","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/index.js":"10","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesLeftSide.jsx":"11","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesRemoteVideo.jsx":"12","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/index.js":"13","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/index.js":"14","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/utils/peer-video-connection.js":"15","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsButton.jsx":"16","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/Room.jsx":"17","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/Main.jsx":"18","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsVideo.jsx":"19","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsShareButton.jsx":"20","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesVideoControls.js":"21"},{"size":393,"mtime":1606598189687,"results":"22","hashOfConfig":"23"},{"size":68,"mtime":1606483227310,"results":"24","hashOfConfig":"23"},{"size":364,"mtime":1606570610744,"results":"25","hashOfConfig":"23"},{"size":1602,"mtime":1606598189669,"results":"26","hashOfConfig":"23"},{"size":210,"mtime":1606508798468,"results":"27","hashOfConfig":"23"},{"size":580,"mtime":1606400897616,"results":"28","hashOfConfig":"23"},{"size":814,"mtime":1606570610743,"results":"29","hashOfConfig":"23"},{"size":545,"mtime":1606733762099,"results":"30","hashOfConfig":"23"},{"size":544,"mtime":1606598189672,"results":"31","hashOfConfig":"23"},{"size":99,"mtime":1606500301674,"results":"32","hashOfConfig":"23"},{"size":1749,"mtime":1606509337520,"results":"33","hashOfConfig":"23"},{"size":508,"mtime":1606733771281,"results":"34","hashOfConfig":"23"},{"size":116,"mtime":1606484897788,"results":"35","hashOfConfig":"23"},{"size":24,"mtime":1606484592407,"results":"36","hashOfConfig":"23"},{"size":3073,"mtime":1606598189685,"results":"37","hashOfConfig":"23"},{"size":370,"mtime":1606585154565,"results":"38","hashOfConfig":"23"},{"size":5120,"mtime":1606734032957,"results":"39","hashOfConfig":"23"},{"size":1515,"mtime":1606595051253,"results":"40","hashOfConfig":"23"},{"size":236,"mtime":1606734022521,"results":"41","hashOfConfig":"23"},{"size":248,"mtime":1606730555398,"results":"42","hashOfConfig":"23"},{"size":1282,"mtime":1606732753751,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iltmhk",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/App.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/index.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/reportWebVitals.js",[],["91","92"],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/OrganismsHeader.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsLogo.jsx",["93"],"import styled from 'styled-components';\nimport React from 'react';\n\nexport const AtomsLogo = styled.h1`\n  color: white;\n  font-size: 1.5rem;\n  @media screen and (max-width: 936px) {\n    font-size: 1rem;\n  }\n`;\n","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/index.js",[],["94","95"],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsProfilePicture.jsx",["96"],"import styled from 'styled-components';\nimport React from 'react';\n\nconst Container = styled.div`\n  height: inherit;\n  display: flex;\n  align-items: center;\n  margin-bottom: -5px;\n\n  span {\n    width: 40px;\n    height: 40px;\n    display: flex;\n    overflow: hidden;\n    position: relative;\n    font-size: 2rem;\n    align-items: center;\n    flex-shrink: 0;\n    font-family: inherit;\n    line-height: 1;\n    user-select: none;\n    border-radius: 50%;\n    justify-content: center;\n  }\n\n  img {\n    color: transparent;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    text-align: center;\n    text-indent: 10000px;\n  }\n`;\n\nexport const AtomsProfilePicture = ({ picture }) => {\n  return (\n    <Container>\n      <span>\n        <img src={picture} alt=\"Profile Photo\" />\n      </span>\n    </Container>\n  );\n};\n","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesLocalVideo.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/organisms/OrganismsMain.jsx",["97"],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/index.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesLeftSide.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesRemoteVideo.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/index.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/index.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/utils/peer-video-connection.js",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsButton.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/Room.jsx",["98"],"import styles from '../App.css';\nimport { OrganismsHeader, OrganismsMain } from '../components/organisms';\nimport logo from '../images/logo.svg';\nimport { MoleculesLocalVideo, MoleculesRemoteVideo, MoleculesVideoControls } from '../components/molecules';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createPeerConnectionContext } from '../utils/peer-video-connection';\nimport { useParams } from 'react-router-dom';\n\nconst senders = [];\nconst peerVideoConnection = createPeerConnectionContext();\n\nexport const Room = () => {\n  const { room } = useParams();\n  const [connectedUsers, setConnectedUsers] = useState([]);\n  const [userMediaStream, setUserMediaStream] = useState(null);\n  const [displayMediaStream, setDisplayMediaStream] = useState(null);\n  const [startTimer, setStartTimer] = useState(false);\n  const [isFullScreen, setFullScreen] = useState(false);\n\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const mainRef = useRef();\n\n  useEffect(() => {\n    const createMediaStream = async () => {\n      if (!userMediaStream) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { min: 640, ideal: 1920 },\n            height: { min: 400, ideal: 1080 },\n            aspectRatio: { ideal: 1.7777777778 },\n          },\n          audio: true,\n        });\n\n        if (localVideo) {\n          localVideo.current.srcObject = stream;\n        }\n\n        stream.getTracks().forEach((track) => {\n          senders.push(peerVideoConnection.peerConnection.addTrack(track, stream));\n        });\n\n        setUserMediaStream(stream);\n      }\n    };\n\n    createMediaStream();\n  }, [userMediaStream]);\n\n  useEffect(() => {\n    peerVideoConnection.joinRoom(room);\n    peerVideoConnection.onRemoveUser((socketId) =>\n      setConnectedUsers((users) => users.filter((user) => user !== socketId)),\n    );\n    peerVideoConnection.onUpdateUserList((users) => setConnectedUsers(users));\n    peerVideoConnection.onAnswerMade((socket) => peerVideoConnection.callUser(socket));\n    peerVideoConnection.onCallRejected((data) => alert(`User: \"Socket: ${data.socket}\" rejected your call.`));\n    peerVideoConnection.onTrack((stream) => (remoteVideo.current.srcObject = stream));\n\n    peerVideoConnection.onConnected(() => {\n      setStartTimer(true);\n    });\n    peerVideoConnection.onDisconnected(() => {\n      setStartTimer(false);\n      remoteVideo.current.srcObject = null;\n    });\n  }, []);\n\n  async function shareScreen() {\n    const stream = displayMediaStream || (await navigator.mediaDevices.getDisplayMedia());\n\n    await senders.find((sender) => sender.track.kind === 'video').replaceTrack(stream.getTracks()[0]);\n\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      cancelScreenSharing(stream);\n    });\n\n    localVideo.current.srcObject = stream;\n\n    setDisplayMediaStream(stream);\n  }\n\n  async function cancelScreenSharing(stream) {\n    await senders\n      .find((sender) => sender.track.kind === 'video')\n      .replaceTrack(userMediaStream.getTracks().find((track) => track.kind === 'video'));\n\n    localVideo.current.srcObject = userMediaStream;\n    stream.getTracks().forEach((track) => track.stop());\n    setDisplayMediaStream(null);\n  }\n\n  function fullScreen() {\n    setFullScreen(true);\n    const elem = mainRef.current;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n\n  function cancelFullScreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  function handleFullScreen(isFullScreen) {\n    setFullScreen(isFullScreen);\n    if (isFullScreen) {\n      fullScreen();\n    } else {\n      cancelFullScreen();\n    }\n  }\n\n  async function handleScreenSharing(isScreenShared) {\n    if (isScreenShared) {\n      await shareScreen();\n    } else {\n      await cancelScreenSharing(displayMediaStream);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <OrganismsHeader\n        onNavItemSelect={(user) => peerVideoConnection.callUser(user.id)}\n        navItems={connectedUsers.map((user) => ({ id: user, title: user }))}\n        title=\"Learn Something\"\n        picture={logo}\n      />\n\n      <OrganismsMain ref={mainRef}>\n        <MoleculesRemoteVideo ref={remoteVideo} autoPlay />\n        <MoleculesLocalVideo ref={localVideo} autoPlay muted />\n        <MoleculesVideoControls\n          isScreenSharing={Boolean(displayMediaStream)}\n          onScreenShare={handleScreenSharing}\n          isFullScreen={isFullScreen}\n          onFullScreen={handleFullScreen}\n          isTimerStarted={startTimer}\n        />\n      </OrganismsMain>\n    </div>\n  );\n};\n","/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/pages/Main.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsVideo.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/atoms/AtomsShareButton.jsx",[],"/Users/mehmetozanturhan/WebstormProjects/webrtc/web/src/components/molecules/MoleculesVideoControls.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":40,"column":9,"nodeType":"111","endLine":40,"endColumn":50},{"ruleId":"103","severity":1,"message":"104","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":68,"column":6,"nodeType":"114","endLine":68,"endColumn":8,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["116"],["117"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'room'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [room]",{"range":"121","text":"122"},[2459,2461],"[room]"]